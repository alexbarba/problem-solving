
const sum = (a, b) => a + b
const deduct = (a, b) => a - b
const firstValue = (a) => a
const diff = (a, b) => Math.abs(a-b)

const nextWall = (grid, startX, startY, col, positive) => {
    const operator = positive ? sum : diff
    const operatorX = col ? operator : firstValue
    const operatorY = !col ? operator : firstValue
    let i = 1
    for(; i<grid.length; i++){
    	if(grid[operatorX(startX,i)][operatorY(startY,i)] === 'X'){
        if(i===1){
          return nextWall(grid, startX, startY, col, !positive)
        }
          break;
        }
    }
    return [col ? operatorX(startX,i -1) : operatorY(startY,i -1), !positive]
}

function minimumMoves(grid, startX, startY, goalX, goalY) {
    let actualX = startX
    let actualY = startY
    let nextDirectionX = !Boolean(startX)
    let nextDirectionY = !Boolean(startY)
    let sum = 0
    
    while((actualX != goalX || actualY !=goalY)) {
      if(actualX != goalX || actualY !=goalY){
        [actualX, nextDirectionX] = nextWall(grid, actualX, actualY, true, nextDirectionX)
        sum++
      }
      
      if(actualX != goalX || actualY !=goalY){
        [actualY, nextDirectionY] = nextWall(grid, actualX, actualY, false, nextDirectionY)
        sum++
      }
      
      
    }
    return sum
}

const grid =[
'.X..X.X..X..X.......XX..XX....X.X...X........X.....XX.X.X...X.X...X..X',
'...X.....XX.........XX......X.X.......X......X..XX.X..X..X.....X.X....',
'............X.......X........X..X.X......X.......X...X.X.....X.X...X..',
'.........X....XX.X.X.X......X..X......X.....X.........X..X.......XX...',
'.....X.......X.X.....XX.....X.XXX.........X.....X.X....XX......XX.....',
'..X....X..........................X...X.........XX.....X..............',
'......X.......X...XX.....X.X....X.......X.............X........X.X....',
'...X.X.XX.XX...X............XX...X.....X..X..X....X.........X.........',
'X.XX........X..........XX..X.X..X.XX.XXX..X........X..X.....XX......X.',
'......X..XXX.......X..XX.XX...........X.....XX..X..X.X......X.X...X...',
'X........X.X....X..X..................XX......X..X.......X.....X..X...',
'...X......X....XX.......X.....X...........X..X....X.....XXX...X...X.X.',
'......X..X....X.XXX.X.....X..X....XX.....X....X.....X...X...........X.',
'....X..X.X...XX..X.X.X..X.....X......X..X......X.X.X.X......X......X..',
'..X..............X...X.........X........X...........X..X.X......X....X',
'.X....X..X......X.........X.....XX....XX............XX..X...X...X.....',
'...........X....X.X...XX...X......X...............X....XX..........X..',
'.X..X..XX..X...X.....XX...XX...........X.....X..XXX.........XX..X....X',
'.XX........XX.XX..........XX............X.........X.XXXX.X.X.........X',
'.....X........X......X.............X.......X............X....X...X..X.',
'X..X.X..X...........XX..X.....X......X...XXX........XX...........X....',
'..X....X.XX.X.....X..X..X...........X......X..........X.....X.......X.',
'..........X.X...X.....X....XX.XX.......XX...X.............XXX..X..X..X',
'X.....X....XX...X.X...X.X.X..X.X..X....X..X..XXX...X...........X.X.X..',
'...XX.X....X...X.....XX...X.....X..XXX.......XX......X....XX......X.XX',
'X..X......X.....X......X.X...X............X.X..........X.X.X..X......X',
'..X....X..X.X....XX....X.XXX..X.XX.....X........X..X...X...X.X......X.',
'.......X...............XX..........X...X......XX...X.X........X.......',
'XXX....X.....X..X.....X.X.....XX..X.......X..X.....XX.......X..X.....X',
'.......X......X.......X..X.......X.........X...X.........X...X.....XXX',
'...X..X....X....X.X..XX......X.......X............X...................',
'.X.....X............X...............X.....X.X...X...X.XXX..X....X..XXX',
'..........X........X...........XX..........X..............X.....XX.X..',
'.X...............XX..X.X......................X..X...X......X.....X...',
'XX..X.X..XXXX..X..........XX..XX..X.............X................XX...',
'......X.XX..X...............X.X....X....X......X.....X..XX............',
'..X.X..X..X......X..X................X......X...X......X.XX...X..X....',
'.........X............X......X......XX.X..................X.....X.....',
'X..X....X...........X.....XX..X.......XXX.....XXX.......X....X.....X.X',
'XX..............XXX....X.X......XX..........X....X.....X......X.......',
'.......X.XX.......X......X..XXX.............X.......XX.....X.XX.......',
'..X.X.....XXX.X.......X.X.........X..X...X...X..X.....X.....XX.......X',
'..XXe.......XX....X..XX..X...XXX.................X..X...........X.....',
'...X........X..X.....X......X.X...XXX..X..XX.X..X...X........X.XXXX...',
'...X.X....X.....X.X.......X..............X...X.X.XX...X...XX.X.......X',
'......X...........X.......X.....XXXX...........X.X.XX......X...X......',
'....X......X......XXX..XX.X.......X.............X.......X.........X..X',
'..X..X..X......X.....X............XX....X..........X......X..X..X.X...',
'X.........X..X..XX........X.X.X......................X.X....X.....X...',
'.....X.X...X.X..X...X...XX...X...X............X..............X...X....',
'......................X....X...X....X.X..............XX.....X.........',
'.................X..X.....X.....XX......X.......X......X.........X.X..',
'...........X..X...X.....X..X.............X............X..X..XX.X......',
'X..........X.X..X..X..........X.XX.............X...X.XX........X......',
'..XX.XX.....X.....X..X.....X.....X...X...........X..X..X....X.........',
'..X.XX...X.X....X.X....X..X.X...X..X.........X..X.....................',
'............X...................X....X.X......X.XX..X...X....X..XX.XX.',
'...X..X.X....X..............X..X.....X.X.........X..........X.......X.',
'..X...........................X......X.X...X........X.................',
'.........X..X...............X...........X..X.X......X.................',
'..XX.............XX.X.........X....XX........X..X...X........X.....X..',
'.............X.X....X.X...X...X.....X...X.....X.....X..X......X......X',
'.....X....X.X.X...XXX...X.X.X.X...X...X.X.....X..X...........X.X.X...X',
'...XX.X...XX......X..........X.......XX..X.......X...X..X.X......X....',
'.......X.......X....................X..........XX.....XXXX..X.X.......',
'.....X...XX...X........X..X...X.X...X..........X...X.........X........',
'XXX..XX.....X...................X.....X.X.......X.X.X..X..............',
'....X.........X.....X.X...XX.....XX......X..........XX..X.XXX...X.X...',
'..X...............X.XX.......X....X......X......X.X.X.......X.......X.',
'..X.X.......XXX..X....X...X....X.....X.X......X..X......X.............',
]

minimumMoves(grid, 2, 42, 68, 12)